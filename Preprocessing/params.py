import numpy as np
import pandas as pd

# Using numbers to represent hydrologic soil groups
hsg_to_num = {'A': 1, 'A/D': 2, 'B': 3, 'B/D': 4, 'C': 5, 'C/D': 6, 'D': 7}
num_to_hsg = dict(zip(hsg_to_num.values(), map(lambda x: x.replace("/", ""), hsg_to_num.keys())))

# Soil depth bins
depth_bins = np.array([5, 20, 50, 100])

# The USLE LS lookup matrix
# USLE LS is based on the slope length (columns) and slope % (rows)
# See Table 7 in SAM Scenario Input Parameter documentation. Only lengths up to 150 ft are included below.
# Source: PRZM 3 manual (Carousel et al, 2005).
uslels_matrix = pd.DataFrame(data=np.array(
    [[0.07, 0.08, 0.09, 0.10, 0.11],
     [0.09, 0.10, 0.12, 0.13, 0.15],
     [0.13, 0.16, 0.19, 0.20, 0.23],
     [0.19, 0.23, 0.26, 0.29, 0.33],
     [0.23, 0.30, 0.36, 0.40, 0.47],
     [0.27, 0.38, 0.46, 0.54, 0.66],
     [0.34, 0.48, 0.58, 0.67, 0.82],
     [0.50, 0.70, 0.86, 0.99, 1.2],
     [0.69, 0.97, 1.2, 1.4, 1.7],
     [0.90, 1.3, 1.6, 1.8, 2.2],
     [1.2, 1.6, 2.0, 2.3, 2.8],
     [1.4, 2.0, 2.5, 2.8, 3.5],
     [1.7, 2.4, 3.0, 3.4, 4.2],
     [2.0, 2.9, 3.5, 4.1, 5.0],
     [3.0, 4.2, 5.1, 5.9, 7.2],
     [4.0, 5.6, 6.9, 8.0, 9.7],
     [6.3, 9, 11, 13, 16],
     [8.9, 13, 15, 18, 22],
     [12, 16, 20, 23, 28]]),
    index=np.array([0.5, 1., 2., 3., 4., 5., 6., 8., 10., 12., 14., 16., 18., 20., 25., 30., 40., 50., 60.]),
    columns=np.array([25, 50, 75, 100, 150]))

# USLEP values for aggregation based on Table 5.6 in PRZM 3 Manual (Carousel et al, 2015).
# USLEP values for cultivated crops by slope bin (0-2, 2-5, 5-10, 10-15, 15-25, >25)
uslep_values = [0.6, 0.5, 0.5, 0.6, 0.8, 0.9]

# Aggegation bins (see Section 3 and Table 4 of SAM Scenario Input Documentation)
fields = ['slope', 'orgC_5', 'sand_5', 'clay_5']
bins = [[0, 2, 5, 10, 15, 25, 200],
        [0, 0.5, 1, 1.5, 2, 3, 4, 5, 6, 12, 20, 100],
        [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100],
        [0, 5, 10, 15, 20, 25, 30, 40, 60, 80, 100]]
bins = dict(zip(fields, bins))

# Double crops identified in CDL (General Crop Groups)
# First crop group listed is used for runoff/erosion generation. Both crops are available for pesticide app/runoff.
double_crops = {14: [10, 40], 15: [10, 24], 18: [10, 80], 25: [20, 24], 26: [20, 60], 42: [40, 20], 45: [40, 24],
                48: [40, 80], 56: [60, 24], 58: [24, 80], 68: [60, 80]}


# Parameters
increments_1 = 1  # number of increments in top 2-cm layer: 1 COMPARTMENT, UNIFORM EXTRACTION
increments_2 = 20  # number of increments in 2nd 100-cm layer (not used in extraction)
delta_x = np.array([0.02] + [0.05] * ((increments_1 + increments_2) - 1))

# Values are from Table F1 of TR-55, interpolated values are included to make arrays same size
erosion_header = [.1, .15, .2, .25, .3, .35, .4, .45, .5]
types = np.array([
    [[2.3055, -0.51429, -0.1175],
     [2.2706, -0.50908, -0.1034],
     [2.23537, -0.50387, -0.08929],
     [2.18219, -0.48488, -0.06589],
     [2.10624, -0.45695, -0.02835],
     [2.00303, -0.40769, -0.01983],
     [1.87733, -0.32274, -0.05754],
     [1.76312, -0.15644, -0.00453],
     [1.67889, -0.0693, 0.]],
    [[2.0325, -0.31583, -0.13748],
     [1.97614, -0.29899, -0.10384],
     [1.91978, -0.28215, -0.0702],
     [1.83842, -0.25543, -0.02597],
     [1.72657, -0.19826, 0.02633],
     [1.70347, -0.17145, 0.01975],
     [1.68037, -0.14463, 0.01317],
     [1.65727, -0.11782, 0.00658],
     [1.63417, -0.091, 0.]],
    [[2.55323, -0.61512, -0.16403],
     [2.53125, -0.61698, -0.15217],
     [2.50975, -0.61885, -0.1403],
     [2.4873, -0.62071, -0.12844],
     [2.46532, -0.62257, -0.11657],
     [2.41896, -0.61594, -0.0882],
     [2.36409, -0.59857, -0.05621],
     [2.29238, -0.57005, -0.02281],
     [2.20282, -0.51599, -0.01259]],
    [[2.47317, -0.51848, -0.17083],
     [2.45395, -0.51687, -0.16124],
     [2.43473, -0.51525, -0.15164],
     [2.4155, -0.51364, -0.14205],
     [2.39628, -0.51202, -0.13245],
     [2.35477, -0.49735, -0.11985],
     [2.30726, -0.46541, -0.11094],
     [2.24876, -0.41314, -0.11508],
     [2.17772, -0.36803, -0.09525]]])

slope_range = np.array([-1, 2.0, 7.0, 12.0, 18.0, 24.0])

genclass_lookup = pd.DataFrame(np.array([
    [1, 10], [2, 20], [3, 30], [4, 80], [5, 40], [6, 90], [10, 90],
    [11, 90], [12, 60], [13, 60], [14, 60],
    [21, 80], [22, 22], [23, 23], [24, 24], [25, 80], [26, 45], [27, 80], [28, 80], [29, 80],
    [30, 80], [31, 80], [32, 80], [33, 80], [34, 80], [35, 60], [36, 110], [37, 110], [38, 80], [39, 80],
    [41, 90], [42, 60], [43, 60], [44, 100], [45, 80], [46, 60], [47, 60], [48, 60], [49, 60],
    [50, 60], [51, 60], [52, 60], [53, 60], [54, 60], [55, 61], [56, 90], [57, 60], [58, 110], [59, 110],
    [60, 110], [61, 100], [62, 110], [63, 140], [64, 160], [65, 200], [66, 70], [67, 70], [68, 70], [69, 71],
    [70, 75], [71, 70], [72, 72], [74, 70], [75, 70], [76, 70], [77, 70],
    [81, 200], [82, 123], [83, 180], [87, 195], [88, 200],
    [92, 100],
    [111, 180], [112, 200],
    [121, 121], [122, 122], [123, 123], [124, 124],
    [131, 200],
    [141, 140], [142, 140], [143, 140],
    [152, 160],
    [171, 150], [176, 110],
    [181, 110],
    [190, 190], [195, 195],
    [204, 70], [205, 80], [206, 60], [207, 60], [208, 60], [209, 60],
    [210, 70], [211, 70], [212, 72], [213, 60], [214, 60], [216, 60], [217, 70], [218, 70], [219, 60],
    [220, 70], [221, 61], [222, 60], [223, 70], [224, 110], [225, 15], [226, 18], [227, 60], [229, 60],
    [230, 56], [231, 60], [232, 26], [233, 68], [234, 58], [235, 80], [236, 58], [237, 18], [238, 25], [239, 42],
    [240, 48], [241, 14], [242, 61], [243, 60], [244, 60], [245, 60], [246, 60], [247, 60], [248, 60], [249, 60],
    [250, 61], [254, 48]]),
    columns=['cdl', 'gen_class'])
